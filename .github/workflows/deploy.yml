name: deploy chatGPT server to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: GitHub 리포지토리의 코드를 체크아웃
        uses: actions/checkout@v4

      - name : JDK 11버전 설치
        uses: actions/setup-java@v4
        with:
         distribution: 'temurin'
         java-version: '11'

      - name: Checkout private vault repository
        uses: actions/checkout@v4
        with:
          repository: YGwan/spring-chatgpt-communication-vault
          token: ${{ secrets.PERSONAL_GIT_TOKEN }}
          path: ./spring-chatgpt-communication-vault

      - name: spring 환경변수 파일 복사
        run: |
          cp spring-chatgpt-communication-vault/application.properties \
             src/main/resources/application.properties

      - name: 테스트 및 빌드하기
        run: |
          ./gradlew clean build
          mv ./build/libs/*SNAPSHOT.jar ./project.jar

      - name: SCP로 EC2에 빌드 된 파일 전송하기
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: ./project.jar
          target: /home/ubuntu/spring-chatgpt-communication/deploy

  deploy:
    runs-on: ubuntu-latest
    needs: build

    env:
      SERVER_PORT: ${{ secrets.SERVER_PORT }}

    steps:
      - name: ssh로 서버 접근 & git pull 후 재배포 진행
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            sudo fuser -k -n tcp ${{ env.SERVER_PORT }} || true
            cd /home/ubuntu/spring-chatgpt-communication/deploy
            nohup java -jar project.jar > ./output.log 2>&1 & 
